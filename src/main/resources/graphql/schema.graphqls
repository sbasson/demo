type Query {
    ordersByProduct(id: ID): [Order]
    inventoriesByProduct(id: ID): [Inventory]
    ordersByCustomer(id: ID): [Order]
    salesmanWithPendingOrders: [Employee]
    countriesWithTopFiveSellingProduct: [CountryProducts]
    warehousesOutOfStockByProduct(id: ID): [Warehouse]
    ordersByDate(date: Date): [Order]
    productsByCategory(id: ID) : [Product]

#    test(productId: ID, warehouseId: ID, quantity: Int): Int
}

type Mutation{

    #note: by conventions we do need to put different input and return type per crud operation (per type)
    # but for this scope i used the same input type.

    createProduct(input: ProductInput) : Product
    updateProduct(input: ProductInput) : Product
    deleteProduct(id: ID) : Product

    createOrder(input: OrderInput) : Order
    updateOrder(input: OrderInput) : Order
    deleteOrder(id: ID) : Order

    deleteWarehouse(id: ID): Warehouse
}

type Subscription {
    onNewOrder: Order!
    onUpdateOrder: Order!
    onDeleteOrder: Order!
}

input OrderInput {
    orderId : ID
    status: String
    orderDate: Date
    customerId: ID
    salesManId: ID
    orderItems: [OrderItemInput]
}

input OrderItemInput {
    orderId: ID
    itemId: ID
    productId: ID
    quantity: Int
    unitPrice: Int
}

input ProductInput {
    productId : ID
    productName: String
    description: String
    standardCost: Int
    listPrice: Int
    productCategoryId: ID
}


scalar Date

type Warehouse {
    warehouseId: ID
    warehouseName: String
}

type CountryProducts {
    country: Country
    products: [Product]
}

type Country {
    countryId: ID
    countryName: String
}

type Product {
    productId : ID
    productName: String
    description: String
    standardCost: Int
    listPrice: Int
    productCategory: ProductCategory
}

type ProductCategory {
    categoryId: ID
    categoryName: String
}

type Inventory {
    id: InventoryPK
    quantity: Int
}

type InventoryPK {
    productId: ID
    warehouseId: ID
}

type Customer {
    customerId: ID
    name: String
    address: String
    website: String
    creditLimit: Int
}

type Order {
    orderId : ID
    status: String
    orderDate: Date
    customer: Customer
    salesMan: Employee
    orderItems: [OrderItem]
}

type OrderItem {
    id: OrderItemPK
    quantity: Int
    unitPrice: Int
    product: Product
}

type OrderItemPK {
    orderId: ID
    itemId: ID
}

type Employee {
    employeeId: ID
    firstName: String
    lastName: String
    email: String
    phone: String
    hireDate: Date
    jobTitle: String
    manager: Employee
    orders: [Order]
}